# GitHub Action for Symfony with MySQL
name: Testing Symfony with MySQL
on: [push, pull_request]
jobs:
  symfony:
    name: Symfony (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: root
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit-bridge
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql
          coverage: xdebug #optional
      - name: Start mysql service
        run: sudo /etc/init.d/mysql start
      - name: Remove only_full_group_by from mysql
        run: mysql -uroot -proot -e "SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));"
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Create .env file
        run: cp .env.dist .env
      - name: Change DATABASE_URL
        run: sed -i 's+DATABASE_URL=mysql://dbuser:dbpass@dbhost/dbname+DATABASE_URL=mysql://root:root@localhost/karma_shop+g' .env
      - name: Set APP_DEBUG=1
        run: sed -i 's+APP_DEBUG=0+APP_DEBUG=1+g' .env
      - name: Set APP_ENV=dev
        run: sed -i 's+APP_ENV=prod+APP_ENV=dev+g' .env
      - name: Install packages frontend
        run: cd frontend/; yarn install
      - name: Install packages main folder
        run: yarn install
      - name: Build website
        run: yarn build
      - name: Install Composer dependencies
        run: composer install --no-progress
      - name: Create database
        run: php bin/console doctrine:database:create
      - name: Update schema
        run: php bin/console d:s:u --force
      - name: Load fixtures
        run: php bin/console --env=dev doctrine:fixtures:load --append
      - name: Set chmod 777 var folder
        run: sudo chmod 777 -R ./var/
      - name: Run tests
        run: ./vendor/bin/phpunit --coverage-text
